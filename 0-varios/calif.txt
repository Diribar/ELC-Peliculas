		// 2. Obtiene la calificaciÃ³n
		let calificaciones;
		if (!confirma.sinCalif) {
			let [feValores, entretiene, calidadTecnica] = await Promise.all([
				BD_genericas.obtienePorId("feValores", confirma.fe_valores_id).then((n) => n.valor),
				BD_genericas.obtienePorId("entretiene", confirma.entretiene_id).then((n) => n.valor),
				BD_genericas.obtienePorId("calidadTecnica", confirma.calidad_tecnica_id).then(
					(n) => n.valor
				),
			]);
			let calificacion = feValores * 0.5 + entretiene * 0.3 + calidadTecnica * 0.2;
			calificaciones = {feValores, entretiene, calidadTecnica, calificacion};
		}
		// 6. Guarda las calificaciones
		if (!confirma.sinCalif) procesos.guarda_cal_registros({...confirma, ...calificaciones}, registro);


	guarda_cal_registros: (confirma, registro) => {
		let producto_id = comp.obtieneEntidad_idDesdeEntidad(confirma.entidad);
		let datos = {
			entidad: "cal_registros",
			usuario_id: registro.creadoPor_id,
			[producto_id]: registro.id,
			feValores: confirma.feValores,
			entretiene: confirma.entretiene,
			calidadTecnica: confirma.calidadTecnica,
			resultado: confirma.calificacion,
		};
		BD_genericas.agregaRegistro(datos.entidad, datos);
	},
