<% registro = datosPersInput.find(n => n.campo == campo) %>
<% if (registro[dataEntry.entidad]) { %>
	<section class="label-input flex-row">
		<label><%- dataEntry.entidad=="peliculas" ? registro.tituloPeli : registro.tituloColec %></label>
		<div class="input-error">
			<input type="text" name="<%= registro.campo %>" autocomplete="off"
				value="<%= dataEntry[registro.campo] %>" class="input">
			<!-- Ayuda -->
			<i class="fa-solid fa-circle-question"></i>
			<ul type="dots" class="mensajeAyuda ocultar">
				<% for (mensaje of registro.mensajes) { %>
					<% if (dataEntry.entidad == "coleccion" || mensaje != registro.mensajes[0]) { %>
						<li><%= mensaje %></li>
					<% } %> 
				<% } %> 
			</ul>
			<!-- Errores -->			
			<i class="fa-solid fa-circle-xmark<%- !errores[registro.campo] ? ' ocultar' : '' %>">
				<span class="mensajeError"><%= errores[registro.campo] %></span>
			</i>
			<i class="fa-solid fa-circle-check ocultar"></i>
		</div>
	</section>
<% } %>


<script>
	let datosPersInput= [
		{
			tituloPeli: "Link de un trailer",
			tituloColec: "Link de un trailer",
			campo: "link_trailer",
			peliculas: true,
			colecciones: true,
			mensajes: [
				"Nos interesa el trailer del primer capítulo.",
				"Debe ser de un sitio seguro, sin virus.",
				"Es ideal si vincula a un link de You Tube.",
			],
		},
		{
			tituloPeli: "Link de la película",
			campo: "link_pelicula",
			peliculas: true,
			colecciones: false,
			mensajes: [
				"Nos interesa el link del primer capítulo.",
				"Debe ser de un sitio seguro, sin virus.",
				"Debe ser de un sitio con política de respeto al copyright. Ej: You Tube.",
				"Pedimos un link con una antigüedad mayor a 3 meses.",
				"En lo posible, elegí un link en castellano y de buena calidad.",
			],
		},
	];

	// Links gratuitos
	campos.includes("link_trailer")
		? (errores.link_trailer = !datos.link_trailer
				? ""
				: !validarFuente(datos.link_trailer)
				? "Debe ser de una fuente confiable"
				: "")
		: "";
	campos.includes("link_pelicula")
		? (errores.link_pelicula = !datos.link_pelicula
				? ""
				: !validarFuente(datos.link_pelicula)
				? "Debe ser de una fuente confiable"
				: "")
		: "";


		let validarFuente = (link) => {
	aux = link.indexOf("youtube.com/watch");
	return aux >= 0 && aux <= 12;
};

camposDP = [...(await variables.datosPersSelect()), ...variables.datosPersInput()];

</script>

<style>
	#datos .label-input .input-error .link {right: -38px; font-size: .9rem; width: 15px;}
</style>